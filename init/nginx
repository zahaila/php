#!/bin/bash

APP_ENV=${1}
max_execution_time=${2}
max_input_time=${3}
output_buffering=${4}
mempage=${5}
mempage_size=${6}
qtd_cpus=${7}
file_descriptors=${8}
major=${9}
SERVER_NAME=${10}

size_unit="k"

# cria dir logs
if [ ! -d /var/log/nginx ];then
    mkdir -p /var/log/nginx
    chown -R www-data:www-data /var/log/nginx
fi
site_conf="/etc/nginx/sites-enabled/default"
if [ -f ${site_conf} ]; then

# Timeouts Globais
    # duração em que a conexão keepalive permanece aberta
    keepalive_timeout=${max_execution_time}

    # Tempo em que o servidor nginx aguarda o envio de corpo da msg do cliente após uma solicitação.
    client_body_timeout=${max_execution_time}

    # Tempo em que o servidor nginx aguarda o envio de cabeçalho da msg do cliente após uma solicitação.
    client_header_timeout=$((${max_execution_time} * 60 / 100)) # 60%

    # Tempo limite para enviar uma resposta ao cliente. Se o cliente não receber a resposta do servidor dentro desse período, o nginx encerrará a conexão.
    send_timeout=$((${max_execution_time} * 40 / 100 + 3)) # 40% + 3

# Buffers Globais

    # client_body_buffer_size semelhante, mas lida com o tamanho do cabeçalho do cliente.
    client_header_buffer_size=$((${mempage_size} * 1))

    # tamanho do buffer do cliente, ou seja, as ações POST, por exemplo envios de formulários enviados ao servidor web Nginx.
    client_body_buffer_size=$((${mempage_size} * 32))

    # tamanho máximo permitido da solicitação do cliente. Se o valor for excedido, o nginx produzirá um erro 413 ou a entidade de solicitação muito grande.
    client_max_body_size=$((${client_body_buffer_size} * 2))

    qtd_buffers=8
    tamanho_buffer=$((${qtd_buffers} * ${client_header_buffer_size}))
    large_client_header_buffers="${qtd_buffers} ${tamanho_buffer}${size_unit}"  # Número e tamanho máximo de buffers para cabeçalhos grandes de clientes.

    if [ ${APP_ENV} = "env" ]; then
        client_header_buffer_size=$((${client_header_buffer_size} * 16))
        client_body_buffer_size=$((${client_body_buffer_size} * 2))
        client_max_body_size=$((${client_max_body_size} * 2))
    fi

# FastCGI

    fastcgi_read_timeout=$((${max_execution_time} * 10 / 100 + ${max_execution_time})) 
    fastcgi_send_timeout=$((${max_input_time} - (${max_input_time} * 10 / 100))) 

    fastcgi_buffer_size=${mempage_size}
    fastcgi_buffers_qtd=128
    fastcgi_buffers="${fastcgi_buffers_qtd} ${fastcgi_buffer_size}${size_unit}"
    fastcgi_busy_buffers_size=$((${fastcgi_buffers_qtd} * ${mempage_size} / 2))
    fastcgi_temp_file_write_size=$((${client_body_buffer_size} * 2))
    fastcgi_request_buffering=off # somente para mais de um webserver

    # descomenta e configura php socket no nginx
    /run/init/site ${site_conf} ${major}

    # Configura workers
    sed -E -i -e "s/worker_processes ([0-9]+|auto)/worker_processes ${qtd_cpus}/g" /etc/nginx/nginx.conf
    sed -E -i -e '/worker_processes/a\' -e "worker_rlimit_nofile ${file_descriptors};" /etc/nginx/nginx.conf

    # Configura conexões
    sed -E -i -e "s|worker_connections [0-9]+|worker_connections $(($(cat /proc/sys/net/core/somaxconn)))|g" /etc/nginx/nginx.conf
    sed -E -i -e "s|default_server|default_server backlog=$(($(cat /proc/sys/net/core/somaxconn) / ${qtd_cpus}))|" ${site_conf}
    sed -E -i -e '/worker_connections/a\' -e "\tuse epoll\;" /etc/nginx/nginx.conf

    # Permite multi acesso [global]
    sed -E -i -e 's/# multi_accept/multi_accept/g' /etc/nginx/nginx.conf

    # Ativa JIT para REGEX
    sed -E -i -e '/worker_processes/a\' -e "pcre_jit on\;" /etc/nginx/nginx.conf

    if [ ${APP_ENV} = "prod" ]; then
        # Desativa log acesso [global]
        sed -E -i -e 's/access_log [0-9\.\_a-z\/]+\;/access_log off;/g' /etc/nginx/nginx.conf
    fi

    # Configura timout keepalive [global]
    sed -E -i -e "s/keepalive_timeout [0-9]+/keepalive_timeout ${keepalive_timeout}/g" /etc/nginx/nginx.conf

    # Configura buffers [global]
    sed -E -i -e '/include \/etc\/nginx\/sites\-enabled\/\*\;/a\' -e "\n\tclient_body_buffer_size ${client_body_buffer_size}${size_unit};\n\tclient_header_buffer_size ${client_header_buffer_size}${size_unit};\n\tclient_max_body_size ${client_max_body_size}${size_unit};\n\tlarge_client_header_buffers ${large_client_header_buffers};" /etc/nginx/nginx.conf

    # Configura timeouts [global]
    sed -E -i -e '/large_client_header_buffers/a\' -e "\tclient_header_timeout ${client_header_timeout};\n\tclient_body_timeout ${client_body_timeout};\n\tsend_timeout ${send_timeout};\n\treset_timedout_connection on;" /etc/nginx/nginx.conf

    # Define charset site
    sed -E -i -e '/^\s*server \{/a\' -e "\tcharset utf-8\;" ${site_conf}

    /run/init/fastcgi_timeouts ${site_conf} ${size_unit} ${fastcgi_read_timeout} ${fastcgi_send_timeout} ${fastcgi_buffers} ${fastcgi_buffer_size} ${fastcgi_busy_buffers_size} ${fastcgi_temp_file_write_size}
fi