#!/bin/bash

set -e

echo "Start PHP"

full_version=$(php-config --version | egrep '[0-9]\.[0-9]\.[0-9]{1,2}' | cut -d'-' -f1)
major=$(echo ${full_version} | cut -d. -f1)
minor=$(echo ${full_version} | cut -d. -f2)
patch=$(echo ${full_version} | cut -d. -f3)
php_version="${major}.${minor}"

sysconfdir=/etc/php/${php_version}
extension_dir=$(php-config --extension-dir)

cli_confdir=${sysconfdir}
cli_ini=php-cli.ini

sapi_confdir=${sysconfdir}
pool_conf=${sapi_confdir}/fpm/pool.d/www.conf

APP_ENV=${APP_ENV:-"debug"}
if [ "${APP_ENV}" != "prod" ] && [ "${APP_ENV}" != "debug" ] && [ "${APP_ENV}" != "dev" ];then
    APP_ENV="debug"
fi

if [ ! -d ${sapi_confdir} ] || [ ! -d ${cli_confdir} ];then
    echo "Diretórios de configurações PHP inexistentes! \n"
    exit 1 
fi
if [ ! -f ${sapi_confdir}/fpm/php.ini ] || [ ! -f ${cli_confdir}/${cli_ini} ];then
    echo "Arquivos de configurações PHP inexistentes! \n"
    exit 1 
fi

# Atualiza configuração. Descomenta se estiver comentada
update_config() {
    file="${1}"
    conf_list="${2}"
    if [ -f "${file}" ] && [ -n "${conf_list}" ]; then
        confs=($(echo ${conf_list}))
        for conf in "${confs[@]}"; do
            param=$(echo ${conf} | sed -E -n -e 's/^([0-9\.a-z\_]+)\=.*/\1/p')
            valor=$(echo ${conf} | sed -E -n -e 's/^[0-9a-z\.\_]+\=(.+)$/\1/p')
            sed -i -E -e "s#^\;?\s*${param}\s*\=\s*([^\n]+|$)#${param} = ${valor}#" ${file}
        done
    fi
}

remove_xdebug_ini() {
    if [ -f ${cli_confdir}/conf.d/20-xdebug.ini ]; then
        rm -f ${cli_confdir}/conf.d/20-xdebug.ini
    fi
    if [ -f ${sapi_confdir}/conf.d/20-xdebug.ini ]; then
        rm -f ${sapi_confdir}/conf.d/20-xdebug.ini
    fi
}

remove_opcache_ini() {
    if [ -f ${cli_confdir}/conf.d/10-opcache.ini ]; then
        rm -f ${cli_confdir}/conf.d/10-opcache.ini
    fi
    if [ -f ${sapi_confdir}/conf.d/10-opcache.ini ]; then
        rm -f ${sapi_confdir}/conf.d/10-opcache.ini
    fi
}

size_unit="k"
time_unit="s"

file_descriptors=$(ulimit -n) # worker_connections
qtd_cpus=$(sed -n '/processor/p' /proc/cpuinfo | wc -l) # worker_processes
mempage=$(getconf PAGESIZE)
mempage_size=$((${mempage} / 1024)) # B => k

# PHP.ini
max_execution_time=$((30*8)) # Facilitar debug
output_buffering=${mempage} # mempage_size in Bytes
max_input_vars=4000
memory_limit=128 # Megabytes

# Libera captura de variáveis de ambiente
sed -E -i -e 's/^\;clear_env/clear_env/' ${pool_conf}

DEFAULT_PHP_INI=''
if [ "${APP_ENV}" = "prod" ]; then
    max_execution_time=10 # impede scripts bosta
    memory_limit=$((${memory_limit} * 10 / 100)) # 10%. Impede scripts bosta

    DEFAULT_PHP_INI="cgi.fix_pathinfo=0 display_startup_errors=Off memory_limit=${memory_limit}M zend.assertions=-1 report_memleaks=Off display_errors=Off log_errors=Off expose_php=Off max_execution_time=${max_execution_time} date.time_zone=America/Manaus session.cookie_secure=On"
fi
if [ "${APP_ENV}" = "dev" ]; then
    DEFAULT_PHP_INI="cgi.fix_pathinfo=0 display_startup_errors=On implicit_flush=On memory_limit=${memory_limit}M display_errors=On log_errors=On expose_php=On max_execution_time=${max_execution_time} date.time_zone=America/Manaus session.cookie_secure=Off"
fi

# Maximum time in seconds a script is allowed to parse input data, like POST and GET.
# Timing begins at the moment PHP is invoked at the server and ends when execution begins.
max_input_time=$((${max_execution_time} * 10 / 100)) # 10%

if [ -n "${PHP_INI_CONF}" ];then
    # Concatena
    PHP_INI_CONF="${DEFAULT_PHP_INI} ${PHP_INI_CONF}"
else
    PHP_INI_CONF=${PHP_INI_CONF:-${DEFAULT_PHP_INI}}
fi

if [ -n "${PHP_INI_CONF}" ];then
    update_config "${sapi_confdir}/fpm/php.ini" "${PHP_INI_CONF}"
    update_config ${cli_confdir}/${cli_ini} "${PHP_INI_CONF}"
fi

# control opcache lib load
if [ -f ${extension_dir}/opcache.so ]; then
    qtd_php_files=65406
    if [ -d /var/www/html ];then
        qtd_php_files=$(find /var/www/html -name "*.php" | wc -l)
    fi
    max_accelerated_files=$(( ${qtd_php_files} / 100 + ${qtd_php_files} ))
    DEFAULT="enable=1 enable_cli=0 memory_consumption=256 interned_strings_buffer=16 validate_timestamps=0 revalidate_freq=0 enable_file_override=1 save_comments=0 error_log='/var/log/php-opcache-error.log' max_accelerated_files=${max_accelerated_files} fast_shutdown=1"
    OPCACHE_CONF=${OPCACHE_CONF:-${DEFAULT}}
    if [ "${OPCACHE_CONF}" = "off" ]; then
        remove_opcache_ini
    else
        if [ ! -f "${sapi_confdir}/conf.d/10-opcache.ini" ];then
            echo "[opcache]" > ${sapi_confdir}/conf.d/10-opcache.ini
            echo "zend_extension=${extension_dir}/opcache.so" >> ${sapi_confdir}/conf.d/10-opcache.ini
        fi
        opcache_confs=($(echo ${OPCACHE_CONF}))
        for conf in "${opcache_confs[@]}"; do
            echo "opcache.${conf}" >> ${sapi_confdir}/conf.d/10-opcache.ini
        done
    fi
fi

ENABLE_FPM_SOCKET=${ENABLE_FPM_SOCKET:-1}
if [ ${ENABLE_FPM_SOCKET} -eq 1 ];then
    echo "Enable PHP-FPM socket"
    sed -i -E -e "s|listen = 127\.0\.0\.1\:9000|listen = /run/php/php${major}-fpm.sock|g" ${pool_conf}
else
    echo "Disable PHP-FPM socket"
    sed -i -E -e "s|listen = /run/php/php${major}-fpm.sock|listen = 127\.0\.0\.1\:9000|g" ${pool_conf}
fi

if [ -f ${extension_dir}/xdebug.so ]; then
    hospedeiro=$(/sbin/ip route|awk '/default/ { print $3 }')
    DEFAULT="mode=develop,debug start_with_request=yes client_port=9000 idekey=VSCODE client_host=${hospedeiro}"
    XDEBUG_CONFIG=${XDEBUG_CONFIG:-${DEFAULT}}
    if [ "${XDEBUG_CONFIG}" = "off" ]; then
        remove_xdebug_ini
    else
        if [ ! -f "${sapi_confdir}/conf.d/20-xdebug.ini" ]; then
            echo "[Xdebug]" > "${sapi_confdir}/conf.d/20-xdebug.ini"
            echo "zend_extension=${extension_dir}/xdebug.so" >> ${sapi_confdir}/conf.d/20-xdebug.ini
        fi
        confs=($(echo ${XDEBUG_CONFIG}))
        for conf in "${confs[@]}"; do
            echo "xdebug.${conf}" >> ${sapi_confdir}/conf.d/20-xdebug.ini
        done
    fi
fi

# control parallel lib load
if [ -f ${extension_dir}/parallel.so ]; then
    ENABLE_PARALLEL=${ENABLE_PARALLEL:-1}
    if [ ${ENABLE_PARALLEL} -eq 1 ]; then
        echo "[parallel]" > ${sapi_confdir}/conf.d/20-parallel.ini
        echo "extension=${extension_dir}/parallel.so" > ${sapi_confdir}/conf.d/20-parallel.ini
    fi
fi

if [ -f ${extension_dir}/redis.so ]; then
    ENABLE_REDIS=${ENABLE_REDIS:-1}
    if [ ${ENABLE_REDIS} -eq 1 ]; then
        echo "[redis]" > ${sapi_confdir}/conf.d/20-redis.ini
        echo "extension=${extension_dir}/redis.so" > ${sapi_confdir}/conf.d/20-redis.ini
    fi
fi
if [ -f ${extension_dir}/memcached.so ]; then 
    ENABLE_MEMCACHED=${ENABLE_MEMCACHED:-1}
    if [ ${ENABLE_MEMCACHED} -eq 1 ]; then
        echo "[memcached]" > ${sapi_confdir}/conf.d/20-memcached.ini
        echo "extension=${extension_dir}/memcached.so" > ${sapi_confdir}/conf.d/20-memcached.ini
    fi
fi
if [ -f ${extension_dir}/mongodb.so ]; then
    ENABLE_MONGODB=${ENABLE_MONGODB:-1}
    if [ ${ENABLE_MONGODB} -eq 1 ]; then
        echo "[mongodb]" > ${sapi_confdir}/conf.d/20-mongodb.ini
        echo "extension=${extension_dir}/mongodb.so" > ${sapi_confdir}/conf.d/20-mongodb.ini
    fi
fi

# configure supervisor
sed -i -E -e "s|command=|command=/usr/sbin/php-fpm --fpm-config /etc/php/${php_version}/fpm/php-fpm.conf --pid /run/php/php-fpm.pid -F|g" /etc/supervisor/conf.d/supervisord.conf

# start supervisor and send to background
/usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf